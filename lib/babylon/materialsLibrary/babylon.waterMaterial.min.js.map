{"version":3,"file":"babylon.waterMaterial.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,cACR,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,sBAAuB,CAAC,aAAcJ,GACnB,iBAAZC,QACdA,QAAQ,uBAAyBD,EAAQG,QAAQ,cAEjDJ,EAAgB,UAAIC,EAAQD,EAAc,QAC3C,CATD,CASoB,oBAATO,KAAuBA,KAAyB,oBAAXC,OAAyBA,OAASC,MAAQC,G,kCCT1FP,EAAOD,QAAUQ,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaZ,QAGrB,IAAIC,EAASQ,EAAyBE,GAAY,CAGjDX,QAAS,CAAC,GAOX,OAHAc,EAAoBH,GAAUV,EAAQA,EAAOD,QAASU,GAG/CT,EAAOD,OACf,CCrBAU,EAAoBK,EAAI,CAACf,EAASgB,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAElB,EAASiB,IAC5EE,OAAOC,eAAepB,EAASiB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDP,EAAoBa,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOjB,MAAQ,IAAIkB,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBjB,EAAoBQ,EAAI,CAACU,EAAKC,IAAUV,OAAOW,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFnB,EAAoBuB,EAAKjC,IACH,oBAAXkC,QAA0BA,OAAOC,aAC1ChB,OAAOC,eAAepB,EAASkC,OAAOC,YAAa,CAAEC,MAAO,WAE7DjB,OAAOC,eAAepB,EAAS,aAAc,CAAEoC,OAAO,GAAO,E,sICW9D,IAAIC,EAAgB,SAAStB,EAAGuB,GAI9B,OAHAD,EAAgBlB,OAAOoB,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAU1B,EAAGuB,GAAKvB,EAAEyB,UAAYF,CAAG,GAC1E,SAAUvB,EAAGuB,GAAK,IAAK,IAAII,KAAKJ,EAAOnB,OAAOW,UAAUC,eAAeC,KAAKM,EAAGI,KAAI3B,EAAE2B,GAAKJ,EAAEI,GAAI,EAC7FL,EAActB,EAAGuB,EAC1B,EAEO,SAASK,EAAU5B,EAAGuB,GAC3B,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAOvC,KAAKwC,YAAchC,CAAG,CADtCsB,EAActB,EAAGuB,GAEjBvB,EAAEe,UAAkB,OAANQ,EAAanB,OAAO6B,OAAOV,IAAMQ,EAAGhB,UAAYQ,EAAER,UAAW,IAAIgB,EACjF,CAyBO,SAASG,EAAWC,EAAYC,EAAQlC,EAAKmC,GAClD,IAA2HrC,EAAvHsC,EAAIC,UAAUC,OAAQtB,EAAIoB,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOjC,OAAOqC,yBAAyBL,EAAQlC,GAAOmC,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBzB,EAAIwB,QAAQC,SAASR,EAAYC,EAAQlC,EAAKmC,QACpH,IAAK,IAAIO,EAAIT,EAAWK,OAAS,EAAGI,GAAK,EAAGA,KAAS5C,EAAImC,EAAWS,MAAI1B,GAAKoB,EAAI,EAAItC,EAAEkB,GAAKoB,EAAI,EAAItC,EAAEoC,EAAQlC,EAAKgB,GAAKlB,EAAEoC,EAAQlC,KAASgB,GAChJ,OAAOoB,EAAI,GAAKpB,GAAKd,OAAOC,eAAe+B,EAAQlC,EAAKgB,GAAIA,CAC9D,CA6F6Bd,OAAO6B,OA0GX7B,OAAO6B,OAyDkB,mBAApBY,iBAAiCA,gB,aChK/D,EAAAC,YAAYC,aAAiB,iBAzId,qxLCmGf,EAAAD,YAAYC,aAAiB,kBAjGd,2qGAmGR,ICtFP,cA+CI,mBACI,cAAO,K,OA/CJ,EAAAC,MAAO,EACP,EAAAC,YAAa,EACb,EAAAC,WAAY,EACZ,EAAAC,YAAa,EACb,EAAAC,YAAa,EACb,EAAAC,YAAa,EACb,EAAAC,YAAa,EACb,EAAAC,YAAa,EACb,EAAAC,WAAY,EACZ,EAAAC,cAAe,EACf,EAAAC,WAAY,EACZ,EAAAC,KAAM,EACN,EAAAC,QAAS,EACT,EAAAC,KAAM,EACN,EAAAC,KAAM,EACN,EAAAC,aAAc,EACd,EAAAC,aAAc,EACd,EAAAC,qBAAuB,EACvB,EAAAC,aAAe,EACf,EAAAC,WAAY,EACZ,EAAAC,gBAAiB,EACjB,EAAAC,cAAe,EACf,EAAAC,kBAAmB,EACnB,EAAAC,yBAA0B,EAC1B,EAAAC,iBAAkB,EAClB,EAAAC,iBAAkB,EAClB,EAAAC,uBAAwB,EACxB,EAAAC,uBAAwB,EAExB,EAAAC,iBAAkB,EAClB,EAAAC,UAAW,EACX,EAAAC,2BAA4B,EAC5B,EAAAC,yBAA0B,EAC1B,EAAAC,aAAc,EACd,EAAAC,kBAAmB,EACnB,EAAAC,UAAW,EACX,EAAAC,UAAW,EACX,EAAAC,aAAc,EACd,EAAAC,cAAe,EACf,EAAAC,gBAAiB,EACjB,EAAAC,qBAAsB,EACtB,EAAAC,iBAAkB,EAClB,EAAAC,QAAS,EACT,EAAAC,4BAA6B,EAC7B,EAAAC,qBAAsB,EAIzB,EAAKC,U,CACT,CACJ,OAnDmC,OAmDnC,EAnDA,CAAmC,EAAAC,iBAqD5B,cAgKH,WACIC,EACAC,EACOC,QAAA,IAAAA,IAAAA,EAAA,IAAgC,EAAAC,QAAQ,IAAK,MAHxD,MAKI,YAAMH,EAAMC,IAAM,K,OAFX,EAAAC,iBAAAA,EAzJJ,EAAAE,aAAe,IAAI,EAAAC,OAAO,EAAG,EAAG,GAGhC,EAAAC,cAAgB,IAAI,EAAAD,OAAO,EAAG,EAAG,GAGjC,EAAAE,cAAgB,GAGf,EAAAC,kBAAmB,EAKnB,EAAAC,uBAAyB,EAQ1B,EAAAC,UAAoB,EAKpB,EAAAC,cAAyB,IAAI,EAAAR,QAAQ,EAAG,GAKxC,EAAAS,WAAqB,GAKrB,EAAAC,WAAqB,GAKpB,EAAAC,kBAAmB,EAQnB,EAAAC,kBAAmB,EAQnB,EAAAC,wBAAyB,EAQ1B,EAAAC,WAAqB,IAAI,EAAAZ,OAAO,GAAK,GAAK,IAK1C,EAAAa,iBAA2B,GAK3B,EAAAC,YAAsB,IAAI,EAAAd,OAAO,GAAK,GAAK,IAK3C,EAAAe,kBAA4B,GAK5B,EAAAC,WAAqB,GAMrB,EAAAC,UAAoB,EAMpB,EAAAC,UAAoB,GAMpB,EAAAC,kBAA4B,EAQ3B,EAAAC,wCAAyC,EAIvC,EAAAC,eAAiB,IAAI,EAAAC,WAAgC,IAKvD,EAAAC,MAAgC,KAKhC,EAAAC,qBAA+B,EAAAC,OAAOC,OACtC,EAAAC,UAAoB,EACpB,EAAAC,eAAyB,EA6B7B,EAAKC,qBAAqB,EAAKC,WAAYjC,GAG3C,EAAKkC,wBAA0B,WAK3B,OAJA,EAAKV,eAAeW,QACpB,EAAKX,eAAeY,KAA0B,EAAKC,gBACnD,EAAKb,eAAeY,KAA0B,EAAKE,gBAE5C,EAAKd,cAChB,EAEA,EAAKe,8BAAgC,EAAKN,WAAWO,6BACjD,EAAKD,gCACL,EAAKE,yBAA2B,EAAKF,8BAA8BG,mBAAmBC,KAAI,WACtF,EAAKC,yCACT,K,CAER,CA2jBJ,OAnvBmC,OAsJ/B,sBAAW,sCAAuB,C,IAAlC,WACI,OAAO,CACX,E,gCAmCA,sBAAW,kCAAmB,C,IAA9B,WACI,OAAOpJ,KAAKqJ,oBAChB,E,IAEA,SAA+BxH,GAC3B7B,KAAKqJ,qBAAuBxH,GAAS7B,KAAKyI,WAAWa,YAAYC,UAAUC,uBAC3ExJ,KAAKyJ,8BACT,E,gCAGA,sBAAW,gCAAiB,C,IAA5B,WACI,OAAOzJ,KAAK8I,cAChB,E,gCAEA,sBAAW,gCAAiB,C,IAA5B,WACI,OAAO9I,KAAK6I,cAChB,E,gCAGO,YAAAa,gBAAP,SAAuBC,GACf3J,KAAK8I,gBAAkB9I,KAAK8I,eAAec,YAC3C5J,KAAK8I,eAAec,WAAWhB,KAAKe,GAGpC3J,KAAK6I,gBAAkB7I,KAAK6I,eAAee,YAC3C5J,KAAK6I,eAAee,WAAWhB,KAAKe,EAE5C,EAEO,YAAAE,qBAAP,SAA4BF,GAEpB,IAOMG,EARN9J,KAAK8I,gBAAkB9I,KAAK8I,eAAec,aAE9B,KADPE,EAAM9J,KAAK8I,eAAec,WAAWG,QAAQJ,KAE/C3J,KAAK8I,eAAec,WAAWI,OAAOF,EAAK,GAI/C9J,KAAK6I,gBAAkB7I,KAAK6I,eAAee,aAE9B,KADPE,EAAM9J,KAAK6I,eAAee,WAAWG,QAAQJ,KAE/C3J,KAAK6I,eAAee,WAAWI,OAAOF,EAAK,EAGvD,EAEO,YAAAG,oBAAP,SAA2BC,GACvB,IAAMC,EAAcD,EAAS,EAAI,EAE7BlK,KAAK8I,iBACL9I,KAAK8I,eAAeqB,YAAcA,GAGlCnK,KAAK6I,iBACL7I,KAAK6I,eAAesB,YAAcA,EAE1C,EAEO,YAAAC,cAAP,WACI,OAAOpK,KAAK8I,eAAiB9I,KAAK8I,eAAec,WAAa,EAClE,EAEA,sBAAW,mCAAoB,C,IAA/B,WACI,QAAS5J,KAAK8I,gBAAsD,IAApC9I,KAAK8I,eAAeqB,YACxD,E,gCAEO,YAAAE,kBAAP,WACI,OAAOrK,KAAKsK,MAAQ,CACxB,EAEO,YAAAC,iBAAP,WACI,OAAO,CACX,EAEO,YAAAC,oBAAP,WACI,OAAO,IACX,EAEO,YAAAC,kBAAP,SAAyBC,EAAoBC,EAAkBC,GAC3D,GAAI5K,KAAK6K,UACDF,EAAQG,QAAUH,EAAQG,OAAOC,qBAAuBJ,EAAQG,OAAOE,+BAAiCJ,EACxG,OAAO,EAIVD,EAAQM,kBACTN,EAAQM,gBAAkB,IAAIC,GAGlC,IAAMC,EAAgCR,EAAQM,gBACxC1E,EAAQvG,KAAKyI,WAEnB,GAAIzI,KAAKoL,mBAAmBT,GACxB,OAAO,EAGX,IAAMU,EAAS9E,EAAM+C,YAGrB,GAAI6B,EAAQG,oBACRH,EAAQI,UAAW,EACfhF,EAAMiF,iBAAiB,CACvB,GAAIxL,KAAKyL,aAAe,EAAAC,cAAcC,mBAAoB,CACtD,IAAK3L,KAAKyL,YAAYG,UAClB,OAAO,EAEPT,EAAQI,UAAW,EACnBJ,EAAQ3H,MAAO,C,CAInB,EAAAkI,cAAcG,2BACdV,EAAQ1H,YAAa,E,CAoBjC,GAfA,EAAAqI,eAAeC,kCAAkCxF,EAAO8E,EAAQrL,KAAMmL,IAASP,GAE/E,EAAAkB,eAAeE,sBAAsBtB,EAAMnE,EAAOvG,KAAKqJ,qBAAsBrJ,KAAKiM,YAAajM,KAAKkM,WAAYlM,KAAKmM,uBAAuBzB,GAAOS,GAE/IA,EAAQiB,gBACRjB,EAAQnG,gBAAkBhF,KAAKqH,iBAC/B8D,EAAQlG,gBAAkBjF,KAAKoH,iBAC/B+D,EAAQjG,sBAAwBlF,KAAKsH,uBACrC6D,EAAQhG,sBAAwBnF,KAAK+H,wCAIzCoD,EAAQkB,aAAe,EAAAP,eAAeQ,wBAAwB/F,EAAOmE,EAAMS,GAAS,EAAMnL,KAAK+G,uBAAwB/G,KAAK8G,kBAGxHqE,EAAQoB,0BAA4BvM,KAAK+I,8BAA+B,CACxE,IAAK/I,KAAK+I,8BAA8B6C,UACpC,OAAO,EAGX5L,KAAK+I,8BAA8ByD,eAAerB,GAElDA,EAAQsB,qBAAiD,MAA1BzM,KAAK0M,oBAA8B1M,KAAK0M,kBAAkBC,WACzFxB,EAAQyB,qBAAiD,MAA1B5M,KAAK6M,oBAA8B7M,KAAK6M,kBAAkBF,U,CAS7F,GALA,EAAAb,eAAegB,4BAA4BpC,EAAMS,GAAS,GAAM,GAGhEnL,KAAKkI,MAAQwC,EAET1K,KAAK+M,mBAAoB,CACzB,IAAK,IAAI3J,EAAI,EAAGA,EAAIpD,KAAK+M,mBAAmB/J,OAAQI,IAChDpD,KAAK0J,gBAAgBnD,EAAMyG,YAAYhN,KAAK+M,mBAAmB3J,KAGnEpD,KAAK+M,mBAAqB,I,CAI9B,GAAI5B,EAAQ8B,QAAS,CACjB9B,EAAQ+B,kBACR3G,EAAM4G,sBAGN,IAAMC,EAAY,IAAI,EAAAC,gBAClBlC,EAAQhH,KACRiJ,EAAUE,YAAY,EAAG,OAGzBnC,EAAQrG,kBACRsI,EAAUE,YAAY,EAAG,oBAG7B,EAAAxB,eAAeyB,0BAA0BpC,EAASiC,EAAWpN,KAAKwN,uBAE9DrC,EAAQ1G,qBAAuB,GAC/B2I,EAAUK,uBAAuB,EAAG/C,GAIxC,IAAMgD,EAAU,CAAC,EAAAC,aAAaC,cAE1BzC,EAAQ/G,QACRsJ,EAAQ9E,KAAK,EAAA+E,aAAaE,YAG1B1C,EAAQ9G,KACRqJ,EAAQ9E,KAAK,EAAA+E,aAAaG,QAG1B3C,EAAQ7G,KACRoJ,EAAQ9E,KAAK,EAAA+E,aAAaI,SAG1B5C,EAAQ5G,aACRmJ,EAAQ9E,KAAK,EAAA+E,aAAaK,WAG9B,EAAAlC,eAAemC,0BAA0BP,EAAShD,EAAMS,EAASiC,GACjE,EAAAtB,eAAeoC,8BAA8BR,EAASvC,GAGtD,IACMgD,EAAOhD,EAAQiD,WACfC,EAAW,CACb,QACA,OACA,iBACA,eACA,cACA,gBACA,iBACA,YACA,YACA,YACA,eACA,SACA,eACA,2BAGA,2BACA,gBACA,aACA,OACA,YACA,iBACA,aACA,aACA,aACA,cACA,mBACA,oBACA,YACA,aAEEC,EAAW,CACb,gBAEA,oBACA,qBAEEC,EAA2B,GAE7B,EAAAC,+BACA,EAAAA,6BAA6BC,gBAAgBJ,EAAUlD,GACvD,EAAAqD,6BAA6BE,gBAAgBJ,EAAUnD,KAG3D,IAAAwD,sBAAqBN,GAErB,EAAAvC,eAAe8C,+BAAuD,CAClEC,cAAeR,EACfS,oBAAqBP,EACrBD,SAAUA,EACVnD,QAASA,EACTqC,sBAAuBxN,KAAKwN,wBAEhC7C,EAAQoE,UACJxI,EAAM+C,YAAY0F,aAzDH,QA2Da,CACpBC,WAAYvB,EACZmB,cAAeR,EACfS,oBAAqBP,EACrBD,SAAUA,EACVnD,QAASgD,EACTf,UAAWA,EACX8B,WAAYlP,KAAKkP,WACjBC,QAASnP,KAAKmP,QACdC,gBAAiB,CAAE5B,sBAAuBxN,KAAK+G,yBAEnDsE,GAEJF,EACAnL,KAAKqP,iB,CAGb,SAAK1E,EAAQG,SAAWH,EAAQG,OAAOc,YAIvCT,EAAQmE,UAAY/I,EAAMgJ,cAC1B5E,EAAQG,OAAOC,qBAAsB,EACrCJ,EAAQG,OAAOE,+BAAiCJ,EAEzC,GACX,EAEO,YAAA4E,eAAP,SAAsBC,EAAe/E,EAAYC,GAC7C,IAAMpE,EAAQvG,KAAKyI,WAEb0C,EAAgCR,EAAQM,gBAC9C,GAAKE,EAAL,CAIA,IAAML,EAASH,EAAQG,OACvB,GAAKA,GAAW9K,KAAKkI,MAArB,CAGAlI,KAAK0P,cAAgB5E,EAGrB9K,KAAK2P,oBAAoBF,GACzBzP,KAAK0P,cAAcE,UAAU,iBAAkBrJ,EAAMsJ,sBAGrD,EAAA/D,eAAegE,oBAAoBpF,EAAM1K,KAAK0P,eAE1C1P,KAAK+P,YAAYxJ,EAAOuE,KAEpB9K,KAAKyL,aAAe,EAAAC,cAAcC,qBAClC3L,KAAK0P,cAAcM,WAAW,gBAAiBhQ,KAAKyL,aAEpDzL,KAAK0P,cAAcO,UAAU,eAAgBjQ,KAAKyL,YAAYyE,iBAAkBlQ,KAAKyL,YAAY0E,OACjGnQ,KAAK0P,cAAcE,UAAU,eAAgB5P,KAAKyL,YAAY2E,sBAGlE,IAAAC,eAAcvF,EAAQ9K,KAAMuG,GAGxBvG,KAAKiM,aACLjM,KAAK0P,cAAcY,SAAS,YAAatQ,KAAKuQ,WAGlDhK,EAAMiK,gBAAgB1F,IAG1B9K,KAAK0P,cAAce,UAAU,gBAAiBzQ,KAAK0G,aAAc1G,KAAKsK,MAAQI,EAAKgG,YAE/EvF,EAAQtG,cACR7E,KAAK0P,cAAce,UAAU,iBAAkBzQ,KAAK4G,cAAe5G,KAAK6G,eAGxEN,EAAMoK,gBAAkB3Q,KAAK4Q,iBAC7B,EAAA9E,eAAe+E,WAAWtK,EAAOmE,EAAM1K,KAAK0P,cAAevE,EAASnL,KAAKwN,uBAIzEjH,EAAM2F,YAAcxB,EAAKoG,UAAYvK,EAAMwK,UAAY,EAAAC,MAAMC,cAC7DjR,KAAK0P,cAAcE,UAAU,OAAQrJ,EAAM2K,iBAI/C,EAAApF,eAAeqF,kBAAkB5K,EAAOmE,EAAM1K,KAAK0P,eAGnD,EAAA5D,eAAesF,aAAajG,EAASnL,KAAK0P,cAAenJ,GAGrD,EAAAmF,cAAcG,2BACd7L,KAAK0P,cAAcM,WAAW,oBAAqBhQ,KAAK8I,gBACxD9I,KAAK0P,cAAcM,WAAW,oBAAqBhQ,KAAK6I,iBAG5D,IAAMwI,EAAOrR,KAAKmI,qBAAqBmJ,SAAS/K,EAAMgL,uBAGhDC,EAAYjL,EAAM+C,YAAYmI,eAChCD,IAAcxR,KAAKuI,iBACnBvI,KAAKuI,eAAiBiJ,EACtBxR,KAAKsI,WAAatI,KAAKuI,gBAG3BvI,KAAK0P,cAAcE,UAAU,2BAA4ByB,GACzDrR,KAAK0P,cAAcgC,WAAW,gBAAiB1R,KAAKiH,eACpDjH,KAAK0P,cAAcY,SAAS,aAActQ,KAAK2H,YAC/C3H,KAAK0P,cAAcY,SAAS,OAAQtQ,KAAKsI,UAAY,KACrDtI,KAAK0P,cAAcY,SAAS,YAAatQ,KAAKgH,WAC9ChH,KAAK0P,cAAcY,SAAS,aAActQ,KAAKkH,YAC/ClH,KAAK0P,cAAcY,SAAS,aAActQ,KAAKmH,YAC/CnH,KAAK0P,cAAce,UAAU,aAAczQ,KAAKuH,WAAY,GAC5DvH,KAAK0P,cAAcY,SAAS,mBAAoBtQ,KAAKwH,kBACrDxH,KAAK0P,cAAce,UAAU,cAAezQ,KAAKyH,YAAa,GAC9DzH,KAAK0P,cAAcY,SAAS,oBAAqBtQ,KAAK0H,mBACtD1H,KAAK0P,cAAcY,SAAS,YAAatQ,KAAK4H,WAC9C5H,KAAK0P,cAAcY,SAAS,YAAatQ,KAAK6H,WAG1C7H,KAAK+I,gCAAkC/I,KAAK+I,8BAA8B4I,oBAC1E3R,KAAK+I,8BAA8B6I,KAAK5R,KAAK0P,eAGjD1P,KAAK6R,WAAWnH,EAAM1K,KAAK0P,c,EAC/B,EAEQ,YAAAlH,qBAAR,SAA6BjC,EAAcC,GAA3C,IAYQsL,EAZR,OAEI9R,KAAK8I,eAAiB,IAAI,EAAAiJ,oBAAoBzL,KAAO,cAAe,CAAE0L,MAAOxL,EAAiByL,EAAGC,OAAQ1L,EAAiB2L,GAAK5L,GAAO,GAAO,GAC7IvG,KAAK8I,eAAesJ,MAAQ,EAAAC,UAAUC,2BACtCtS,KAAK8I,eAAeyJ,MAAQ,EAAAF,UAAUC,2BACtCtS,KAAK8I,eAAe0J,sBAAuB,EAE3CxS,KAAK6I,eAAiB,IAAI,EAAAkJ,oBAAoBzL,KAAO,cAAe,CAAE0L,MAAOxL,EAAiByL,EAAGC,OAAQ1L,EAAiB2L,GAAK5L,GAAO,GAAO,GAC7IvG,KAAK6I,eAAeuJ,MAAQ,EAAAC,UAAUC,2BACtCtS,KAAK6I,eAAe0J,MAAQ,EAAAF,UAAUC,2BACtCtS,KAAK6I,eAAe2J,sBAAuB,EAG3C,IACIC,EADAC,EAA6B,KAE3BC,EAAe,EAAAvK,OAAOC,OAE5BrI,KAAK8I,eAAe8J,eAAiB,WAOjC,GANI,EAAK1K,QACL4J,EAAY,EAAK5J,MAAM4J,UACvB,EAAK5J,MAAM4J,WAAY,IAItB,EAAKhK,iBAAkB,CACxB4K,EAAYnM,EAAMmM,UAElB,IAAMG,EAAY,EAAK3K,MAAQ,EAAKA,MAAM4K,iBAAiBX,EAAI,EAC/D5L,EAAMmM,UAAY,EAAAK,MAAMC,sBAAsB,IAAI,EAAAC,QAAQ,EAAGJ,EAAY,IAAM,GAAI,IAAI,EAAAI,QAAQ,EAAG,EAAG,G,CAE7G,EAEAjT,KAAK8I,eAAeoK,cAAgB,WAC5B,EAAKhL,QACL,EAAKA,MAAM4J,UAAYA,GAItB,EAAKhK,mBACNvB,EAAMmM,UAAYA,EAE1B,EAEA1S,KAAK6I,eAAe+J,eAAiB,WAOjC,GANI,EAAK1K,QACL4J,EAAY,EAAK5J,MAAM4J,UACvB,EAAK5J,MAAM4J,WAAY,IAItB,EAAKhK,iBAAkB,CACxB4K,EAAYnM,EAAMmM,UAElB,IAAMG,EAAY,EAAK3K,MAAQ,EAAKA,MAAM4K,iBAAiBX,EAAI,EAC/D5L,EAAMmM,UAAY,EAAAK,MAAMC,sBAAsB,IAAI,EAAAC,QAAQ,EAAGJ,EAAY,IAAM,GAAI,IAAI,EAAAI,QAAQ,GAAI,EAAG,IAEtG,EAAA7K,OAAO+K,gBAAgB5M,EAAMmM,UAAWC,E,CAI5CF,EAAkBlM,EAAM2K,gBAExByB,EAAaS,cAAcX,EAAiB,EAAKtK,sBACjD5B,EAAM8M,mBAAmB,EAAKlL,qBAAsB5B,EAAMgL,uBAC1DhL,EAAM+M,wBAA0B,EAAAL,QAAQM,qBAA8BhN,EAAMiN,aAAcC,SAAUd,EACxG,EAEA3S,KAAK6I,eAAeqK,cAAgB,WAC5B,EAAKhL,QACL,EAAKA,MAAM4J,UAAYA,GAI3BvL,EAAMmM,UAAYA,EAGlBnM,EAAM8M,mBAAmBZ,EAAiBlM,EAAMgL,uBAChDhL,EAAM+M,wBAA0B,IACpC,CACJ,EAEO,YAAAI,eAAP,WACI,IAAMC,EAAU,GAYhB,OAVI3T,KAAKyL,aAAezL,KAAKyL,YAAYmI,YAAc5T,KAAKyL,YAAYmI,WAAW5Q,OAAS,GACxF2Q,EAAQ/K,KAAK5I,KAAKyL,aAElBzL,KAAK6I,gBAAkB7I,KAAK6I,eAAe+K,YAAc5T,KAAK6I,eAAe+K,WAAW5Q,OAAS,GACjG2Q,EAAQ/K,KAAK5I,KAAK6I,gBAElB7I,KAAK8I,gBAAkB9I,KAAK8I,eAAe8K,YAAc5T,KAAK8I,eAAe8K,WAAW5Q,OAAS,GACjG2Q,EAAQ/K,KAAK5I,KAAK8I,gBAGf6K,CACX,EAEO,YAAAE,kBAAP,WACI,IAAMC,EAAiB,YAAMD,kBAAiB,WAM9C,OAJI7T,KAAK+T,cACLD,EAAelL,KAAK5I,KAAK+T,cAGtBD,CACX,EAEO,YAAAE,WAAP,SAAkBC,GACd,QAAI,YAAMD,WAAU,UAACC,IAIjBjU,KAAK+T,eAAiBE,CAK9B,EAEO,YAAAC,QAAP,SAAeC,GACPnU,KAAKyL,aACLzL,KAAKyL,YAAYyI,UAGrB,IAAIE,EAAQpU,KAAKyI,WAAW4L,oBAAoBtK,QAA6B/J,KAAK8I,iBACpE,GAAVsL,GACApU,KAAKyI,WAAW4L,oBAAoBrK,OAAOoK,EAAO,GAEtDA,GAAS,GAEK,IADdA,EAAQpU,KAAKyI,WAAW4L,oBAAoBtK,QAA6B/J,KAAK6I,kBAE1E7I,KAAKyI,WAAW4L,oBAAoBrK,OAAOoK,EAAO,GAGlDpU,KAAK6I,gBACL7I,KAAK6I,eAAeqL,UAEpBlU,KAAK8I,gBACL9I,KAAK8I,eAAeoL,UAIpBlU,KAAK+I,+BAAiC/I,KAAKiJ,0BAC3CjJ,KAAK+I,8BAA8BG,mBAAmBoL,OAAOtU,KAAKiJ,0BAGtE,YAAMiL,QAAO,UAACC,EAClB,EAEO,YAAAI,MAAP,SAAajO,GAAb,WACI,OAAO,EAAAkO,oBAAoBC,OAAM,WAAM,WAAIC,EAAcpO,EAAM,EAAKmC,WAA7B,GAA0CzI,KACrF,EAEO,YAAA2U,UAAP,WACI,IAAMC,EAAsB,YAAMD,UAAS,WAI3C,GAHAC,EAAoBC,WAAa,wBAEjCD,EAAoBhL,WAAa,GAC7B5J,KAAK8I,gBAAkB9I,KAAK8I,eAAec,WAC3C,IAAK,IAAIxG,EAAI,EAAGA,EAAIpD,KAAK8I,eAAec,WAAW5G,OAAQI,IACvDwR,EAAoBhL,WAAWhB,KAAK5I,KAAK8I,eAAec,WAAWxG,GAAG0R,IAI9E,OAAOF,CACX,EAEO,YAAAG,aAAP,WACI,MAAO,eACX,EAGc,EAAAC,MAAd,SAAoBC,EAAa1O,EAAc2O,GAC3C,IAAMC,EAAM,EAAAX,oBAAoBQ,OAAM,WAAM,WAAIN,EAAcO,EAAO3O,KAAMC,EAA/B,GAAuC0O,EAAQ1O,EAAO2O,GAGlG,OAFAC,EAAIpI,mBAAqBkI,EAAOrL,WAEzBuL,CACX,EAEc,EAAAC,kBAAd,SAAgC9O,EAAcC,GAE1C,OADa,IAAA8O,cAAa/O,EAAM,CAAE0L,MAAO,IAAKE,OAAQ,IAAKoD,aAAc,GAAIC,WAAW,GAAShP,EAErG,EA7uBQ,IADP,IAAAiP,oBAAmB,gB,mCAGb,IADN,IAAAC,kBAAiB,qC,kCAIX,IADN,IAAAC,sB,mCAIM,IADN,IAAAA,sB,oCAIM,IADN,IAAAf,c,oCAIO,IADP,IAAAA,WAAU,oB,uCAGJ,IADN,IAAAc,kBAAiB,mC,sCAIV,IADP,IAAAd,WAAU,0B,6CAGJ,IADN,IAAAc,kBAAiB,mC,4CAOX,IADN,IAAAd,c,gCAMM,IADN,IAAAgB,uB,oCAMM,IADN,IAAAhB,c,iCAMM,IADN,IAAAA,c,iCAMO,IADP,IAAAA,WAAU,oB,uCAGJ,IADN,IAAAc,kBAAiB,iC,sCAOV,IADP,IAAAd,WAAU,oB,uCAGJ,IADN,IAAAc,kBAAiB,iC,sCAOV,IADP,IAAAd,WAAU,0B,6CAGJ,IADN,IAAAc,kBAAiB,iC,4CAOX,IADN,IAAAC,sB,iCAMM,IADN,IAAAf,c,uCAMM,IADN,IAAAe,sB,kCAMM,IADN,IAAAf,c,wCAMM,IADN,IAAAA,c,iCAOM,IADN,IAAAA,c,gCAOM,IADN,IAAAA,c,gCAOM,IADN,IAAAA,c,uCASO,IADP,IAAAA,WAAU,0C,6DAGJ,IADN,IAAAc,kBAAiB,iC,4DAgElB,IADC,IAAAd,c,wCAyjBL,C,CAnvBO,CAA4B,EAAAiB,eAqvBnC,IAAAC,eAAc,wBAAyBnB,GCp0BvC,IAAMoB,OAAiC,IAAX,EAAA9U,EAAyB,EAAAA,EAA2B,oBAAXI,OAAyBA,YAASd,EACvG,QAA4B,IAAjBwV,EACP,IAAK,IAAMpV,KAAO,EACRoV,EAAcC,QAAQrV,GAAa,EAAQA,GCRzD,S","sources":["webpack://MATERIALS/webpack/universalModuleDefinition","webpack://MATERIALS/external umd {\"root\":\"BABYLON\",\"commonjs\":\"babylonjs\",\"commonjs2\":\"babylonjs\",\"amd\":\"babylonjs\"}","webpack://MATERIALS/webpack/bootstrap","webpack://MATERIALS/webpack/runtime/define property getters","webpack://MATERIALS/webpack/runtime/global","webpack://MATERIALS/webpack/runtime/hasOwnProperty shorthand","webpack://MATERIALS/webpack/runtime/make namespace object","webpack://MATERIALS/../../../../node_modules/tslib/tslib.es6.mjs","webpack://MATERIALS/../../../dev/materials/src/water/water.fragment.ts","webpack://MATERIALS/../../../dev/materials/src/water/water.vertex.ts","webpack://MATERIALS/../../../dev/materials/src/water/waterMaterial.ts","webpack://MATERIALS/../../../lts/materials/src/legacy/legacy-water.ts","webpack://MATERIALS/./src/water.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"babylonjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"babylonjs-materials\", [\"babylonjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylonjs-materials\"] = factory(require(\"babylonjs\"));\n\telse\n\t\troot[\"MATERIALS\"] = factory(root[\"BABYLON\"]);\n})((typeof self !== \"undefined\" ? self : typeof global !== \"undefined\" ? global : this), (__WEBPACK_EXTERNAL_MODULE__520__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__520__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// Do not edit.\nimport { ShaderStore } from \"core/Engines/shaderStore\";\nimport \"core/Shaders/ShadersInclude/helperFunctions\";\nimport \"core/Shaders/ShadersInclude/imageProcessingDeclaration\";\nimport \"core/Shaders/ShadersInclude/imageProcessingFunctions\";\nimport \"core/Shaders/ShadersInclude/lightFragmentDeclaration\";\nimport \"core/Shaders/ShadersInclude/lightUboDeclaration\";\nimport \"core/Shaders/ShadersInclude/lightsFragmentFunctions\";\nimport \"core/Shaders/ShadersInclude/shadowsFragmentFunctions\";\nimport \"core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration\";\nimport \"core/Shaders/ShadersInclude/logDepthDeclaration\";\nimport \"core/Shaders/ShadersInclude/fogFragmentDeclaration\";\nimport \"core/Shaders/ShadersInclude/clipPlaneFragment\";\nimport \"core/Shaders/ShadersInclude/lightFragment\";\nimport \"core/Shaders/ShadersInclude/logDepthFragment\";\nimport \"core/Shaders/ShadersInclude/fogFragment\";\n\nconst name = \"waterPixelShader\";\nconst shader = `#ifdef LOGARITHMICDEPTH\n#extension GL_EXT_frag_depth : enable\n#endif\nprecision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;\n#ifdef SPECULARTERM\nuniform vec4 vSpecularColor;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<helperFunctions>\n#include<imageProcessingDeclaration>\n#include<imageProcessingFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#ifdef BUMP\nvarying vec2 vNormalUV;\n#ifdef BUMPSUPERIMPOSE\nvarying vec2 vNormalUV2;\n#endif\nuniform sampler2D normalSampler;uniform vec2 vNormalInfos;\n#endif\nuniform sampler2D refractionSampler;uniform sampler2D reflectionSampler;const float LOG2=1.442695;uniform vec3 cameraPosition;uniform vec4 waterColor;uniform float colorBlendFactor;uniform vec4 waterColor2;uniform float colorBlendFactor2;uniform float bumpHeight;uniform float time;varying vec3 vRefractionMapTexCoord;varying vec3 vReflectionMapTexCoord;\n#include<clipPlaneFragmentDeclaration>\n#include<logDepthDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\n#ifdef BUMP\n#ifdef BUMPSUPERIMPOSE\nbaseColor=0.6*texture2D(normalSampler,vNormalUV)+0.4*texture2D(normalSampler,vec2(vNormalUV2.x,vNormalUV2.y));\n#else\nbaseColor=texture2D(normalSampler,vNormalUV);\n#endif\nvec3 bumpColor=baseColor.rgb;\n#ifdef ALPHATEST\nif (baseColor.a<0.4)\ndiscard;\n#endif\nbaseColor.rgb*=vNormalInfos.y;\n#else\nvec3 bumpColor=vec3(1.0);\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nbaseColor.rgb*=vColor.rgb;\n#endif\n#ifdef NORMAL\nvec2 perturbation=bumpHeight*(baseColor.rg-0.5);\n#ifdef BUMPAFFECTSREFLECTION\nvec3 normalW=normalize(vNormalW+vec3(perturbation.x*8.0,0.0,perturbation.y*8.0));if (normalW.y<0.0) {normalW.y=-normalW.y;}\n#else\nvec3 normalW=normalize(vNormalW);\n#endif\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);vec2 perturbation=bumpHeight*(vec2(1.0,1.0)-0.5);\n#endif\n#ifdef FRESNELSEPARATE\n#ifdef REFLECTION\nvec2 projectedRefractionTexCoords=clamp(vRefractionMapTexCoord.xy/vRefractionMapTexCoord.z+perturbation*0.5,0.0,1.0);vec4 refractiveColor=texture2D(refractionSampler,projectedRefractionTexCoords);\n#ifdef IS_REFRACTION_LINEAR\nrefractiveColor.rgb=toGammaSpace(refractiveColor.rgb);\n#endif\nvec2 projectedReflectionTexCoords=clamp(vec2(\nvReflectionMapTexCoord.x/vReflectionMapTexCoord.z+perturbation.x*0.3,\nvReflectionMapTexCoord.y/vReflectionMapTexCoord.z+perturbation.y\n),0.0,1.0);vec4 reflectiveColor=texture2D(reflectionSampler,projectedReflectionTexCoords);\n#ifdef IS_REFLECTION_LINEAR\nreflectiveColor.rgb=toGammaSpace(reflectiveColor.rgb);\n#endif\nvec3 upVector=vec3(0.0,1.0,0.0);float fresnelTerm=clamp(abs(pow(dot(viewDirectionW,upVector),3.0)),0.05,0.65);float IfresnelTerm=1.0-fresnelTerm;refractiveColor=colorBlendFactor*waterColor+(1.0-colorBlendFactor)*refractiveColor;reflectiveColor=IfresnelTerm*colorBlendFactor2*waterColor+(1.0-colorBlendFactor2*IfresnelTerm)*reflectiveColor;vec4 combinedColor=refractiveColor*fresnelTerm+reflectiveColor*IfresnelTerm;baseColor=combinedColor;\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nfloat glossiness=vSpecularColor.a;vec3 specularBase=vec3(0.,0.,0.);vec3 specularColor=vSpecularColor.rgb;\n#else\nfloat glossiness=0.;\n#endif\n#include<lightFragment>[0..maxSimultaneousLights]\nvec3 finalDiffuse=clamp(baseColor.rgb,0.0,1.0);\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#ifdef SPECULARTERM\nvec3 finalSpecular=specularBase*specularColor;\n#else\nvec3 finalSpecular=vec3(0.0);\n#endif\n#else \n#ifdef REFLECTION\nvec2 projectedRefractionTexCoords=clamp(vRefractionMapTexCoord.xy/vRefractionMapTexCoord.z+perturbation,0.0,1.0);vec4 refractiveColor=texture2D(refractionSampler,projectedRefractionTexCoords);\n#ifdef IS_REFRACTION_LINEAR\nrefractiveColor.rgb=toGammaSpace(refractiveColor.rgb);\n#endif\nvec2 projectedReflectionTexCoords=clamp(vReflectionMapTexCoord.xy/vReflectionMapTexCoord.z+perturbation,0.0,1.0);vec4 reflectiveColor=texture2D(reflectionSampler,projectedReflectionTexCoords);\n#ifdef IS_REFLECTION_LINEAR\nreflectiveColor.rgb=toGammaSpace(reflectiveColor.rgb);\n#endif\nvec3 upVector=vec3(0.0,1.0,0.0);float fresnelTerm=max(dot(viewDirectionW,upVector),0.0);vec4 combinedColor=refractiveColor*fresnelTerm+reflectiveColor*(1.0-fresnelTerm);baseColor=colorBlendFactor*waterColor+(1.0-colorBlendFactor)*combinedColor;\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float aggShadow=0.;float numLights=0.;\n#ifdef SPECULARTERM\nfloat glossiness=vSpecularColor.a;vec3 specularBase=vec3(0.,0.,0.);vec3 specularColor=vSpecularColor.rgb;\n#else\nfloat glossiness=0.;\n#endif\n#include<lightFragment>[0..maxSimultaneousLights]\nvec3 finalDiffuse=clamp(baseColor.rgb,0.0,1.0);\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nalpha*=vColor.a;\n#endif\n#ifdef SPECULARTERM\nvec3 finalSpecular=specularBase*specularColor;\n#else\nvec3 finalSpecular=vec3(0.0);\n#endif\n#endif\nvec4 color=vec4(finalDiffuse+finalSpecular,alpha);\n#include<logDepthFragment>\n#include<fogFragment>\n#ifdef IMAGEPROCESSINGPOSTPROCESS\ncolor.rgb=toLinearSpace(color.rgb);\n#elif defined(IMAGEPROCESSING)\ncolor.rgb=toLinearSpace(color.rgb);color=applyImageProcessing(color);\n#endif\ngl_FragColor=color;\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const waterPixelShader = { name, shader };\n","// Do not edit.\nimport { ShaderStore } from \"core/Engines/shaderStore\";\nimport \"core/Shaders/ShadersInclude/bonesDeclaration\";\nimport \"core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration\";\nimport \"core/Shaders/ShadersInclude/instancesDeclaration\";\nimport \"core/Shaders/ShadersInclude/clipPlaneVertexDeclaration\";\nimport \"core/Shaders/ShadersInclude/fogVertexDeclaration\";\nimport \"core/Shaders/ShadersInclude/lightFragmentDeclaration\";\nimport \"core/Shaders/ShadersInclude/lightUboDeclaration\";\nimport \"core/Shaders/ShadersInclude/logDepthDeclaration\";\nimport \"core/Shaders/ShadersInclude/instancesVertex\";\nimport \"core/Shaders/ShadersInclude/bonesVertex\";\nimport \"core/Shaders/ShadersInclude/bakedVertexAnimation\";\nimport \"core/Shaders/ShadersInclude/clipPlaneVertex\";\nimport \"core/Shaders/ShadersInclude/fogVertex\";\nimport \"core/Shaders/ShadersInclude/shadowsVertex\";\nimport \"core/Shaders/ShadersInclude/vertexColorMixing\";\nimport \"core/Shaders/ShadersInclude/logDepthVertex\";\n\nconst name = \"waterVertexShader\";\nconst shader = `precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#ifdef VERTEXCOLOR\nattribute vec4 color;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef BUMP\nvarying vec2 vNormalUV;\n#ifdef BUMPSUPERIMPOSE\nvarying vec2 vNormalUV2;\n#endif\nuniform mat4 normalMatrix;uniform vec2 vNormalInfos;\n#endif\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR) && defined(INSTANCES)\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<logDepthDeclaration>\nuniform mat4 reflectionViewProjection;uniform vec2 windDirection;uniform float waveLength;uniform float time;uniform float windForce;uniform float waveHeight;uniform float waveSpeed;uniform float waveCount;varying vec3 vRefractionMapTexCoord;varying vec3 vReflectionMapTexCoord;\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\n#ifdef BUMP\nif (vNormalInfos.x==0.)\n{vNormalUV=vec2(normalMatrix*vec4((uv*1.0)/waveLength+time*windForce*windDirection,1.0,0.0));\n#ifdef BUMPSUPERIMPOSE\nvNormalUV2=vec2(normalMatrix*vec4((uv*0.721)/waveLength+time*1.2*windForce*windDirection,1.0,0.0));\n#endif\n}\nelse\n{vNormalUV=vec2(normalMatrix*vec4((uv2*1.0)/waveLength+time*windForce*windDirection ,1.0,0.0));\n#ifdef BUMPSUPERIMPOSE\nvNormalUV2=vec2(normalMatrix*vec4((uv2*0.721)/waveLength+time*1.2*windForce*windDirection ,1.0,0.0));\n#endif\n}\n#endif\n#include<clipPlaneVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#include<vertexColorMixing>\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\nfloat finalWaveCount=1.0/(waveCount*0.5);\n#ifdef USE_WORLD_COORDINATES\nvec3 p=worldPos.xyz;\n#else\nvec3 p=position;\n#endif\nfloat newY=(sin(((p.x/finalWaveCount)+time*waveSpeed))*waveHeight*windDirection.x*5.0)\n+ (cos(((p.z/finalWaveCount)+ time*waveSpeed))*waveHeight*windDirection.y*5.0);p.y+=abs(newY);\n#ifdef USE_WORLD_COORDINATES\ngl_Position=viewProjection*vec4(p,1.0);\n#else\ngl_Position=viewProjection*finalWorld*vec4(p,1.0);\n#endif\n#ifdef REFLECTION\nvRefractionMapTexCoord.x=0.5*(gl_Position.w+gl_Position.x);vRefractionMapTexCoord.y=0.5*(gl_Position.w+gl_Position.y);vRefractionMapTexCoord.z=gl_Position.w;worldPos=reflectionViewProjection*finalWorld*vec4(position,1.0);vReflectionMapTexCoord.x=0.5*(worldPos.w+worldPos.x);vReflectionMapTexCoord.y=0.5*(worldPos.w+worldPos.y);vReflectionMapTexCoord.z=worldPos.w;\n#endif\n#include<logDepthVertex>\n#define CUSTOM_VERTEX_MAIN_END\n}\n`;\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @internal */\nexport const waterVertexShader = { name, shader };\n","/* eslint-disable @typescript-eslint/naming-convention */\r\nimport type { Nullable } from \"core/types\";\r\nimport { serializeAsVector2, serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"core/Misc/decorators\";\r\nimport { Matrix, Vector2, Vector3 } from \"core/Maths/math.vector\";\r\nimport { Color3 } from \"core/Maths/math.color\";\r\nimport { Plane } from \"core/Maths/math.plane\";\r\nimport type { IAnimatable } from \"core/Animations/animatable.interface\";\r\nimport { Constants } from \"core/Engines/constants\";\r\nimport { SmartArray } from \"core/Misc/smartArray\";\r\nimport type { Observer } from \"core/Misc/observable\";\r\nimport type { BaseTexture } from \"core/Materials/Textures/baseTexture\";\r\nimport { RenderTargetTexture } from \"core/Materials/Textures/renderTargetTexture\";\r\nimport type { IEffectCreationOptions } from \"core/Materials/effect\";\r\nimport { MaterialDefines } from \"core/Materials/materialDefines\";\r\nimport type { IImageProcessingConfigurationDefines } from \"core/Materials/imageProcessingConfiguration\";\r\nimport { ImageProcessingConfiguration } from \"core/Materials/imageProcessingConfiguration\";\r\nimport { MaterialHelper } from \"core/Materials/materialHelper\";\r\nimport { PushMaterial } from \"core/Materials/pushMaterial\";\r\nimport { MaterialFlags } from \"core/Materials/materialFlags\";\r\nimport { VertexBuffer } from \"core/Buffers/buffer\";\r\nimport type { AbstractMesh } from \"core/Meshes/abstractMesh\";\r\nimport type { SubMesh } from \"core/Meshes/subMesh\";\r\nimport type { Mesh } from \"core/Meshes/mesh\";\r\nimport type { Camera } from \"core/Cameras/camera\";\r\nimport { Scene } from \"core/scene\";\r\nimport { RegisterClass } from \"core/Misc/typeStore\";\r\n\r\nimport \"./water.fragment\";\r\nimport \"./water.vertex\";\r\nimport { EffectFallbacks } from \"core/Materials/effectFallbacks\";\r\nimport { CreateGround } from \"core/Meshes/Builders/groundBuilder\";\r\nimport { addClipPlaneUniforms, bindClipPlane } from \"core/Materials/clipPlaneMaterialHelper\";\r\n\r\nclass WaterMaterialDefines extends MaterialDefines implements IImageProcessingConfigurationDefines {\r\n    public BUMP = false;\r\n    public REFLECTION = false;\r\n    public CLIPPLANE = false;\r\n    public CLIPPLANE2 = false;\r\n    public CLIPPLANE3 = false;\r\n    public CLIPPLANE4 = false;\r\n    public CLIPPLANE5 = false;\r\n    public CLIPPLANE6 = false;\r\n    public ALPHATEST = false;\r\n    public DEPTHPREPASS = false;\r\n    public POINTSIZE = false;\r\n    public FOG = false;\r\n    public NORMAL = false;\r\n    public UV1 = false;\r\n    public UV2 = false;\r\n    public VERTEXCOLOR = false;\r\n    public VERTEXALPHA = false;\r\n    public NUM_BONE_INFLUENCERS = 0;\r\n    public BonesPerMesh = 0;\r\n    public INSTANCES = false;\r\n    public INSTANCESCOLOR = false;\r\n    public SPECULARTERM = false;\r\n    public LOGARITHMICDEPTH = false;\r\n    public USE_REVERSE_DEPTHBUFFER = false;\r\n    public FRESNELSEPARATE = false;\r\n    public BUMPSUPERIMPOSE = false;\r\n    public BUMPAFFECTSREFLECTION = false;\r\n    public USE_WORLD_COORDINATES = false;\r\n\r\n    public IMAGEPROCESSING = false;\r\n    public VIGNETTE = false;\r\n    public VIGNETTEBLENDMODEMULTIPLY = false;\r\n    public VIGNETTEBLENDMODEOPAQUE = false;\r\n    public TONEMAPPING = false;\r\n    public TONEMAPPING_ACES = false;\r\n    public CONTRAST = false;\r\n    public EXPOSURE = false;\r\n    public COLORCURVES = false;\r\n    public COLORGRADING = false;\r\n    public COLORGRADING3D = false;\r\n    public SAMPLER3DGREENDEPTH = false;\r\n    public SAMPLER3DBGRMAP = false;\r\n    public DITHER = false;\r\n    public IMAGEPROCESSINGPOSTPROCESS = false;\r\n    public SKIPFINALCOLORCLAMP = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.rebuild();\r\n    }\r\n}\r\n\r\nexport class WaterMaterial extends PushMaterial {\r\n    /*\r\n     * Public members\r\n     */\r\n    @serializeAsTexture(\"bumpTexture\")\r\n    private _bumpTexture: BaseTexture;\r\n    @expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\r\n    public bumpTexture: BaseTexture;\r\n\r\n    @serializeAsColor3()\r\n    public diffuseColor = new Color3(1, 1, 1);\r\n\r\n    @serializeAsColor3()\r\n    public specularColor = new Color3(0, 0, 0);\r\n\r\n    @serialize()\r\n    public specularPower = 64;\r\n\r\n    @serialize(\"disableLighting\")\r\n    private _disableLighting = false;\r\n    @expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\r\n    public disableLighting: boolean;\r\n\r\n    @serialize(\"maxSimultaneousLights\")\r\n    private _maxSimultaneousLights = 4;\r\n    @expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\r\n    public maxSimultaneousLights: number;\r\n\r\n    /**\r\n     * Defines the wind force.\r\n     */\r\n    @serialize()\r\n    public windForce: number = 6;\r\n    /**\r\n     * Defines the direction of the wind in the plane (X, Z).\r\n     */\r\n    @serializeAsVector2()\r\n    public windDirection: Vector2 = new Vector2(0, 1);\r\n    /**\r\n     * Defines the height of the waves.\r\n     */\r\n    @serialize()\r\n    public waveHeight: number = 0.4;\r\n    /**\r\n     * Defines the bump height related to the bump map.\r\n     */\r\n    @serialize()\r\n    public bumpHeight: number = 0.4;\r\n    /**\r\n     * Defines wether or not: to add a smaller moving bump to less steady waves.\r\n     */\r\n    @serialize(\"bumpSuperimpose\")\r\n    private _bumpSuperimpose = false;\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public bumpSuperimpose: boolean;\r\n\r\n    /**\r\n     * Defines wether or not color refraction and reflection differently with .waterColor2 and .colorBlendFactor2. Non-linear (physically correct) fresnel.\r\n     */\r\n    @serialize(\"fresnelSeparate\")\r\n    private _fresnelSeparate = false;\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public fresnelSeparate: boolean;\r\n\r\n    /**\r\n     * Defines wether or not bump Wwves modify the reflection.\r\n     */\r\n    @serialize(\"bumpAffectsReflection\")\r\n    private _bumpAffectsReflection = false;\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public bumpAffectsReflection: boolean;\r\n\r\n    /**\r\n     * Defines the water color blended with the refraction (near).\r\n     */\r\n    @serializeAsColor3()\r\n    public waterColor: Color3 = new Color3(0.1, 0.1, 0.6);\r\n    /**\r\n     * Defines the blend factor related to the water color.\r\n     */\r\n    @serialize()\r\n    public colorBlendFactor: number = 0.2;\r\n    /**\r\n     * Defines the water color blended with the reflection (far).\r\n     */\r\n    @serializeAsColor3()\r\n    public waterColor2: Color3 = new Color3(0.1, 0.1, 0.6);\r\n    /**\r\n     * Defines the blend factor related to the water color (reflection, far).\r\n     */\r\n    @serialize()\r\n    public colorBlendFactor2: number = 0.2;\r\n    /**\r\n     * Defines the maximum length of a wave.\r\n     */\r\n    @serialize()\r\n    public waveLength: number = 0.1;\r\n\r\n    /**\r\n     * Defines the waves speed.\r\n     */\r\n    @serialize()\r\n    public waveSpeed: number = 1.0;\r\n\r\n    /**\r\n     * Defines the number of times waves are repeated. This is typically used to adjust waves count according to the ground's size where the material is applied on.\r\n     */\r\n    @serialize()\r\n    public waveCount: number = 20;\r\n    /**\r\n     * Sets or gets whether or not automatic clipping should be enabled or not. Setting to true will save performances and\r\n     * will avoid calculating useless pixels in the pixel shader of the water material.\r\n     */\r\n    @serialize()\r\n    public disableClipPlane: boolean = false;\r\n\r\n    /**\r\n     * Defines whether or not to use world coordinates for wave deformations.\r\n     * The default value is false, meaning that the deformation is applied in object (local) space.\r\n     * You will probably need to set it to true if you are using instances or thin instances for your water objects.\r\n     */\r\n    @serialize(\"useWorldCoordinatesForWaveDeformation\")\r\n    private _useWorldCoordinatesForWaveDeformation = false;\r\n    @expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\r\n    public useWorldCoordinatesForWaveDeformation: boolean;\r\n\r\n    protected _renderTargets = new SmartArray<RenderTargetTexture>(16);\r\n\r\n    /*\r\n     * Private members\r\n     */\r\n    private _mesh: Nullable<AbstractMesh> = null;\r\n\r\n    private _refractionRTT: Nullable<RenderTargetTexture>;\r\n    private _reflectionRTT: Nullable<RenderTargetTexture>;\r\n\r\n    private _reflectionTransform: Matrix = Matrix.Zero();\r\n    private _lastTime: number = 0;\r\n    private _lastDeltaTime: number = 0;\r\n\r\n    private _useLogarithmicDepth: boolean;\r\n\r\n    private _waitingRenderList: Nullable<string[]>;\r\n\r\n    private _imageProcessingConfiguration: Nullable<ImageProcessingConfiguration>;\r\n    private _imageProcessingObserver: Nullable<Observer<ImageProcessingConfiguration>>;\r\n\r\n    /**\r\n     * Gets a boolean indicating that current material needs to register RTT\r\n     */\r\n    public get hasRenderTargetTextures(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Constructor\r\n     * @param name\r\n     * @param scene\r\n     * @param renderTargetSize\r\n     */\r\n    constructor(\r\n        name: string,\r\n        scene?: Scene,\r\n        public renderTargetSize: Vector2 = new Vector2(512, 512)\r\n    ) {\r\n        super(name, scene);\r\n\r\n        this._createRenderTargets(this.getScene(), renderTargetSize);\r\n\r\n        // Create render targets\r\n        this.getRenderTargetTextures = (): SmartArray<RenderTargetTexture> => {\r\n            this._renderTargets.reset();\r\n            this._renderTargets.push(<RenderTargetTexture>this._reflectionRTT);\r\n            this._renderTargets.push(<RenderTargetTexture>this._refractionRTT);\r\n\r\n            return this._renderTargets;\r\n        };\r\n\r\n        this._imageProcessingConfiguration = this.getScene().imageProcessingConfiguration;\r\n        if (this._imageProcessingConfiguration) {\r\n            this._imageProcessingObserver = this._imageProcessingConfiguration.onUpdateParameters.add(() => {\r\n                this._markAllSubMeshesAsImageProcessingDirty();\r\n            });\r\n        }\r\n    }\r\n\r\n    @serialize()\r\n    public get useLogarithmicDepth(): boolean {\r\n        return this._useLogarithmicDepth;\r\n    }\r\n\r\n    public set useLogarithmicDepth(value: boolean) {\r\n        this._useLogarithmicDepth = value && this.getScene().getEngine().getCaps().fragmentDepthSupported;\r\n        this._markAllSubMeshesAsMiscDirty();\r\n    }\r\n\r\n    // Get / Set\r\n    public get refractionTexture(): Nullable<RenderTargetTexture> {\r\n        return this._refractionRTT;\r\n    }\r\n\r\n    public get reflectionTexture(): Nullable<RenderTargetTexture> {\r\n        return this._reflectionRTT;\r\n    }\r\n\r\n    // Methods\r\n    public addToRenderList(node: any): void {\r\n        if (this._refractionRTT && this._refractionRTT.renderList) {\r\n            this._refractionRTT.renderList.push(node);\r\n        }\r\n\r\n        if (this._reflectionRTT && this._reflectionRTT.renderList) {\r\n            this._reflectionRTT.renderList.push(node);\r\n        }\r\n    }\r\n\r\n    public removeFromRenderList(node: any): void {\r\n        if (this._refractionRTT && this._refractionRTT.renderList) {\r\n            const idx = this._refractionRTT.renderList.indexOf(node);\r\n            if (idx !== -1) {\r\n                this._refractionRTT.renderList.splice(idx, 1);\r\n            }\r\n        }\r\n\r\n        if (this._reflectionRTT && this._reflectionRTT.renderList) {\r\n            const idx = this._reflectionRTT.renderList.indexOf(node);\r\n            if (idx !== -1) {\r\n                this._reflectionRTT.renderList.splice(idx, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public enableRenderTargets(enable: boolean): void {\r\n        const refreshRate = enable ? 1 : 0;\r\n\r\n        if (this._refractionRTT) {\r\n            this._refractionRTT.refreshRate = refreshRate;\r\n        }\r\n\r\n        if (this._reflectionRTT) {\r\n            this._reflectionRTT.refreshRate = refreshRate;\r\n        }\r\n    }\r\n\r\n    public getRenderList(): Nullable<AbstractMesh[]> {\r\n        return this._refractionRTT ? this._refractionRTT.renderList : [];\r\n    }\r\n\r\n    public get renderTargetsEnabled(): boolean {\r\n        return !(this._refractionRTT && this._refractionRTT.refreshRate === 0);\r\n    }\r\n\r\n    public needAlphaBlending(): boolean {\r\n        return this.alpha < 1.0;\r\n    }\r\n\r\n    public needAlphaTesting(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public getAlphaTestTexture(): Nullable<BaseTexture> {\r\n        return null;\r\n    }\r\n\r\n    public isReadyForSubMesh(mesh: AbstractMesh, subMesh: SubMesh, useInstances?: boolean): boolean {\r\n        if (this.isFrozen) {\r\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady && subMesh.effect._wasPreviouslyUsingInstances === useInstances) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (!subMesh.materialDefines) {\r\n            subMesh.materialDefines = new WaterMaterialDefines();\r\n        }\r\n\r\n        const defines = <WaterMaterialDefines>subMesh.materialDefines;\r\n        const scene = this.getScene();\r\n\r\n        if (this._isReadyForSubMesh(subMesh)) {\r\n            return true;\r\n        }\r\n\r\n        const engine = scene.getEngine();\r\n\r\n        // Textures\r\n        if (defines._areTexturesDirty) {\r\n            defines._needUVs = false;\r\n            if (scene.texturesEnabled) {\r\n                if (this.bumpTexture && MaterialFlags.BumpTextureEnabled) {\r\n                    if (!this.bumpTexture.isReady()) {\r\n                        return false;\r\n                    } else {\r\n                        defines._needUVs = true;\r\n                        defines.BUMP = true;\r\n                    }\r\n                }\r\n\r\n                if (MaterialFlags.ReflectionTextureEnabled) {\r\n                    defines.REFLECTION = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, this, defines, useInstances ? true : false);\r\n\r\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, this._useLogarithmicDepth, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\r\n\r\n        if (defines._areMiscDirty) {\r\n            defines.FRESNELSEPARATE = this._fresnelSeparate;\r\n            defines.BUMPSUPERIMPOSE = this._bumpSuperimpose;\r\n            defines.BUMPAFFECTSREFLECTION = this._bumpAffectsReflection;\r\n            defines.USE_WORLD_COORDINATES = this._useWorldCoordinatesForWaveDeformation;\r\n        }\r\n\r\n        // Lights\r\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, true, this._maxSimultaneousLights, this._disableLighting);\r\n\r\n        // Image processing\r\n        if (defines._areImageProcessingDirty && this._imageProcessingConfiguration) {\r\n            if (!this._imageProcessingConfiguration.isReady()) {\r\n                return false;\r\n            }\r\n\r\n            this._imageProcessingConfiguration.prepareDefines(defines);\r\n\r\n            defines.IS_REFLECTION_LINEAR = this.reflectionTexture != null && !this.reflectionTexture.gammaSpace;\r\n            defines.IS_REFRACTION_LINEAR = this.refractionTexture != null && !this.refractionTexture.gammaSpace;\r\n        }\r\n\r\n        // Attribs\r\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true);\r\n\r\n        // Configure this\r\n        this._mesh = mesh;\r\n\r\n        if (this._waitingRenderList) {\r\n            for (let i = 0; i < this._waitingRenderList.length; i++) {\r\n                this.addToRenderList(scene.getNodeById(this._waitingRenderList[i]));\r\n            }\r\n\r\n            this._waitingRenderList = null;\r\n        }\r\n\r\n        // Get correct effect\r\n        if (defines.isDirty) {\r\n            defines.markAsProcessed();\r\n            scene.resetCachedMaterial();\r\n\r\n            // Fallbacks\r\n            const fallbacks = new EffectFallbacks();\r\n            if (defines.FOG) {\r\n                fallbacks.addFallback(1, \"FOG\");\r\n            }\r\n\r\n            if (defines.LOGARITHMICDEPTH) {\r\n                fallbacks.addFallback(0, \"LOGARITHMICDEPTH\");\r\n            }\r\n\r\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this.maxSimultaneousLights);\r\n\r\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\r\n                fallbacks.addCPUSkinningFallback(0, mesh);\r\n            }\r\n\r\n            //Attributes\r\n            const attribs = [VertexBuffer.PositionKind];\r\n\r\n            if (defines.NORMAL) {\r\n                attribs.push(VertexBuffer.NormalKind);\r\n            }\r\n\r\n            if (defines.UV1) {\r\n                attribs.push(VertexBuffer.UVKind);\r\n            }\r\n\r\n            if (defines.UV2) {\r\n                attribs.push(VertexBuffer.UV2Kind);\r\n            }\r\n\r\n            if (defines.VERTEXCOLOR) {\r\n                attribs.push(VertexBuffer.ColorKind);\r\n            }\r\n\r\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\r\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\r\n\r\n            // Legacy browser patch\r\n            const shaderName = \"water\";\r\n            const join = defines.toString();\r\n            const uniforms = [\r\n                \"world\",\r\n                \"view\",\r\n                \"viewProjection\",\r\n                \"vEyePosition\",\r\n                \"vLightsType\",\r\n                \"vDiffuseColor\",\r\n                \"vSpecularColor\",\r\n                \"vFogInfos\",\r\n                \"vFogColor\",\r\n                \"pointSize\",\r\n                \"vNormalInfos\",\r\n                \"mBones\",\r\n                \"normalMatrix\",\r\n                \"logarithmicDepthConstant\",\r\n\r\n                // Water\r\n                \"reflectionViewProjection\",\r\n                \"windDirection\",\r\n                \"waveLength\",\r\n                \"time\",\r\n                \"windForce\",\r\n                \"cameraPosition\",\r\n                \"bumpHeight\",\r\n                \"waveHeight\",\r\n                \"waterColor\",\r\n                \"waterColor2\",\r\n                \"colorBlendFactor\",\r\n                \"colorBlendFactor2\",\r\n                \"waveSpeed\",\r\n                \"waveCount\",\r\n            ];\r\n            const samplers = [\r\n                \"normalSampler\",\r\n                // Water\r\n                \"refractionSampler\",\r\n                \"reflectionSampler\",\r\n            ];\r\n            const uniformBuffers: string[] = [];\r\n\r\n            if (ImageProcessingConfiguration) {\r\n                ImageProcessingConfiguration.PrepareUniforms(uniforms, defines);\r\n                ImageProcessingConfiguration.PrepareSamplers(samplers, defines);\r\n            }\r\n\r\n            addClipPlaneUniforms(uniforms);\r\n\r\n            MaterialHelper.PrepareUniformsAndSamplersList(<IEffectCreationOptions>{\r\n                uniformsNames: uniforms,\r\n                uniformBuffersNames: uniformBuffers,\r\n                samplers: samplers,\r\n                defines: defines,\r\n                maxSimultaneousLights: this.maxSimultaneousLights,\r\n            });\r\n            subMesh.setEffect(\r\n                scene.getEngine().createEffect(\r\n                    shaderName,\r\n                    <IEffectCreationOptions>{\r\n                        attributes: attribs,\r\n                        uniformsNames: uniforms,\r\n                        uniformBuffersNames: uniformBuffers,\r\n                        samplers: samplers,\r\n                        defines: join,\r\n                        fallbacks: fallbacks,\r\n                        onCompiled: this.onCompiled,\r\n                        onError: this.onError,\r\n                        indexParameters: { maxSimultaneousLights: this._maxSimultaneousLights },\r\n                    },\r\n                    engine\r\n                ),\r\n                defines,\r\n                this._materialContext\r\n            );\r\n        }\r\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\r\n            return false;\r\n        }\r\n\r\n        defines._renderId = scene.getRenderId();\r\n        subMesh.effect._wasPreviouslyReady = true;\r\n        subMesh.effect._wasPreviouslyUsingInstances = !!useInstances;\r\n\r\n        return true;\r\n    }\r\n\r\n    public bindForSubMesh(world: Matrix, mesh: Mesh, subMesh: SubMesh): void {\r\n        const scene = this.getScene();\r\n\r\n        const defines = <WaterMaterialDefines>subMesh.materialDefines;\r\n        if (!defines) {\r\n            return;\r\n        }\r\n\r\n        const effect = subMesh.effect;\r\n        if (!effect || !this._mesh) {\r\n            return;\r\n        }\r\n        this._activeEffect = effect;\r\n\r\n        // Matrices\r\n        this.bindOnlyWorldMatrix(world);\r\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\r\n\r\n        // Bones\r\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\r\n\r\n        if (this._mustRebind(scene, effect)) {\r\n            // Textures\r\n            if (this.bumpTexture && MaterialFlags.BumpTextureEnabled) {\r\n                this._activeEffect.setTexture(\"normalSampler\", this.bumpTexture);\r\n\r\n                this._activeEffect.setFloat2(\"vNormalInfos\", this.bumpTexture.coordinatesIndex, this.bumpTexture.level);\r\n                this._activeEffect.setMatrix(\"normalMatrix\", this.bumpTexture.getTextureMatrix());\r\n            }\r\n            // Clip plane\r\n            bindClipPlane(effect, this, scene);\r\n\r\n            // Point size\r\n            if (this.pointsCloud) {\r\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\r\n            }\r\n\r\n            scene.bindEyePosition(effect);\r\n        }\r\n\r\n        this._activeEffect.setColor4(\"vDiffuseColor\", this.diffuseColor, this.alpha * mesh.visibility);\r\n\r\n        if (defines.SPECULARTERM) {\r\n            this._activeEffect.setColor4(\"vSpecularColor\", this.specularColor, this.specularPower);\r\n        }\r\n\r\n        if (scene.lightsEnabled && !this.disableLighting) {\r\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines, this.maxSimultaneousLights);\r\n        }\r\n\r\n        // View\r\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\r\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\r\n        }\r\n\r\n        // Fog\r\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\r\n\r\n        // Log. depth\r\n        MaterialHelper.BindLogDepth(defines, this._activeEffect, scene);\r\n\r\n        // Water\r\n        if (MaterialFlags.ReflectionTextureEnabled) {\r\n            this._activeEffect.setTexture(\"refractionSampler\", this._refractionRTT);\r\n            this._activeEffect.setTexture(\"reflectionSampler\", this._reflectionRTT);\r\n        }\r\n\r\n        const wrvp = this._reflectionTransform.multiply(scene.getProjectionMatrix());\r\n\r\n        // Add delta time. Prevent adding delta time if it hasn't changed.\r\n        const deltaTime = scene.getEngine().getDeltaTime();\r\n        if (deltaTime !== this._lastDeltaTime) {\r\n            this._lastDeltaTime = deltaTime;\r\n            this._lastTime += this._lastDeltaTime;\r\n        }\r\n\r\n        this._activeEffect.setMatrix(\"reflectionViewProjection\", wrvp);\r\n        this._activeEffect.setVector2(\"windDirection\", this.windDirection);\r\n        this._activeEffect.setFloat(\"waveLength\", this.waveLength);\r\n        this._activeEffect.setFloat(\"time\", this._lastTime / 100000);\r\n        this._activeEffect.setFloat(\"windForce\", this.windForce);\r\n        this._activeEffect.setFloat(\"waveHeight\", this.waveHeight);\r\n        this._activeEffect.setFloat(\"bumpHeight\", this.bumpHeight);\r\n        this._activeEffect.setColor4(\"waterColor\", this.waterColor, 1.0);\r\n        this._activeEffect.setFloat(\"colorBlendFactor\", this.colorBlendFactor);\r\n        this._activeEffect.setColor4(\"waterColor2\", this.waterColor2, 1.0);\r\n        this._activeEffect.setFloat(\"colorBlendFactor2\", this.colorBlendFactor2);\r\n        this._activeEffect.setFloat(\"waveSpeed\", this.waveSpeed);\r\n        this._activeEffect.setFloat(\"waveCount\", this.waveCount);\r\n\r\n        // image processing\r\n        if (this._imageProcessingConfiguration && !this._imageProcessingConfiguration.applyByPostProcess) {\r\n            this._imageProcessingConfiguration.bind(this._activeEffect);\r\n        }\r\n\r\n        this._afterBind(mesh, this._activeEffect);\r\n    }\r\n\r\n    private _createRenderTargets(scene: Scene, renderTargetSize: Vector2): void {\r\n        // Render targets\r\n        this._refractionRTT = new RenderTargetTexture(name + \"_refraction\", { width: renderTargetSize.x, height: renderTargetSize.y }, scene, false, true);\r\n        this._refractionRTT.wrapU = Constants.TEXTURE_MIRROR_ADDRESSMODE;\r\n        this._refractionRTT.wrapV = Constants.TEXTURE_MIRROR_ADDRESSMODE;\r\n        this._refractionRTT.ignoreCameraViewport = true;\r\n\r\n        this._reflectionRTT = new RenderTargetTexture(name + \"_reflection\", { width: renderTargetSize.x, height: renderTargetSize.y }, scene, false, true);\r\n        this._reflectionRTT.wrapU = Constants.TEXTURE_MIRROR_ADDRESSMODE;\r\n        this._reflectionRTT.wrapV = Constants.TEXTURE_MIRROR_ADDRESSMODE;\r\n        this._reflectionRTT.ignoreCameraViewport = true;\r\n\r\n        let isVisible: boolean;\r\n        let clipPlane: Nullable<Plane> = null;\r\n        let savedViewMatrix: Matrix;\r\n        const mirrorMatrix = Matrix.Zero();\r\n\r\n        this._refractionRTT.onBeforeRender = () => {\r\n            if (this._mesh) {\r\n                isVisible = this._mesh.isVisible;\r\n                this._mesh.isVisible = false;\r\n            }\r\n\r\n            // Clip plane\r\n            if (!this.disableClipPlane) {\r\n                clipPlane = scene.clipPlane;\r\n\r\n                const positiony = this._mesh ? this._mesh.absolutePosition.y : 0.0;\r\n                scene.clipPlane = Plane.FromPositionAndNormal(new Vector3(0, positiony + 0.05, 0), new Vector3(0, 1, 0));\r\n            }\r\n        };\r\n\r\n        this._refractionRTT.onAfterRender = () => {\r\n            if (this._mesh) {\r\n                this._mesh.isVisible = isVisible;\r\n            }\r\n\r\n            // Clip plane\r\n            if (!this.disableClipPlane) {\r\n                scene.clipPlane = clipPlane;\r\n            }\r\n        };\r\n\r\n        this._reflectionRTT.onBeforeRender = () => {\r\n            if (this._mesh) {\r\n                isVisible = this._mesh.isVisible;\r\n                this._mesh.isVisible = false;\r\n            }\r\n\r\n            // Clip plane\r\n            if (!this.disableClipPlane) {\r\n                clipPlane = scene.clipPlane;\r\n\r\n                const positiony = this._mesh ? this._mesh.absolutePosition.y : 0.0;\r\n                scene.clipPlane = Plane.FromPositionAndNormal(new Vector3(0, positiony - 0.05, 0), new Vector3(0, -1, 0));\r\n\r\n                Matrix.ReflectionToRef(scene.clipPlane, mirrorMatrix);\r\n            }\r\n\r\n            // Transform\r\n            savedViewMatrix = scene.getViewMatrix();\r\n\r\n            mirrorMatrix.multiplyToRef(savedViewMatrix, this._reflectionTransform);\r\n            scene.setTransformMatrix(this._reflectionTransform, scene.getProjectionMatrix());\r\n            scene._mirroredCameraPosition = Vector3.TransformCoordinates((<Camera>scene.activeCamera).position, mirrorMatrix);\r\n        };\r\n\r\n        this._reflectionRTT.onAfterRender = () => {\r\n            if (this._mesh) {\r\n                this._mesh.isVisible = isVisible;\r\n            }\r\n\r\n            // Clip plane\r\n            scene.clipPlane = clipPlane;\r\n\r\n            // Transform\r\n            scene.setTransformMatrix(savedViewMatrix, scene.getProjectionMatrix());\r\n            scene._mirroredCameraPosition = null;\r\n        };\r\n    }\r\n\r\n    public getAnimatables(): IAnimatable[] {\r\n        const results = [];\r\n\r\n        if (this.bumpTexture && this.bumpTexture.animations && this.bumpTexture.animations.length > 0) {\r\n            results.push(this.bumpTexture);\r\n        }\r\n        if (this._reflectionRTT && this._reflectionRTT.animations && this._reflectionRTT.animations.length > 0) {\r\n            results.push(this._reflectionRTT);\r\n        }\r\n        if (this._refractionRTT && this._refractionRTT.animations && this._refractionRTT.animations.length > 0) {\r\n            results.push(this._refractionRTT);\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    public getActiveTextures(): BaseTexture[] {\r\n        const activeTextures = super.getActiveTextures();\r\n\r\n        if (this._bumpTexture) {\r\n            activeTextures.push(this._bumpTexture);\r\n        }\r\n\r\n        return activeTextures;\r\n    }\r\n\r\n    public hasTexture(texture: BaseTexture): boolean {\r\n        if (super.hasTexture(texture)) {\r\n            return true;\r\n        }\r\n\r\n        if (this._bumpTexture === texture) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public dispose(forceDisposeEffect?: boolean): void {\r\n        if (this.bumpTexture) {\r\n            this.bumpTexture.dispose();\r\n        }\r\n\r\n        let index = this.getScene().customRenderTargets.indexOf(<RenderTargetTexture>this._refractionRTT);\r\n        if (index != -1) {\r\n            this.getScene().customRenderTargets.splice(index, 1);\r\n        }\r\n        index = -1;\r\n        index = this.getScene().customRenderTargets.indexOf(<RenderTargetTexture>this._reflectionRTT);\r\n        if (index != -1) {\r\n            this.getScene().customRenderTargets.splice(index, 1);\r\n        }\r\n\r\n        if (this._reflectionRTT) {\r\n            this._reflectionRTT.dispose();\r\n        }\r\n        if (this._refractionRTT) {\r\n            this._refractionRTT.dispose();\r\n        }\r\n\r\n        // Remove image-processing observer\r\n        if (this._imageProcessingConfiguration && this._imageProcessingObserver) {\r\n            this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver);\r\n        }\r\n\r\n        super.dispose(forceDisposeEffect);\r\n    }\r\n\r\n    public clone(name: string): WaterMaterial {\r\n        return SerializationHelper.Clone(() => new WaterMaterial(name, this.getScene()), this);\r\n    }\r\n\r\n    public serialize(): any {\r\n        const serializationObject = super.serialize();\r\n        serializationObject.customType = \"BABYLON.WaterMaterial\";\r\n\r\n        serializationObject.renderList = [];\r\n        if (this._refractionRTT && this._refractionRTT.renderList) {\r\n            for (let i = 0; i < this._refractionRTT.renderList.length; i++) {\r\n                serializationObject.renderList.push(this._refractionRTT.renderList[i].id);\r\n            }\r\n        }\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public getClassName(): string {\r\n        return \"WaterMaterial\";\r\n    }\r\n\r\n    // Statics\r\n    public static Parse(source: any, scene: Scene, rootUrl: string): WaterMaterial {\r\n        const mat = SerializationHelper.Parse(() => new WaterMaterial(source.name, scene), source, scene, rootUrl);\r\n        mat._waitingRenderList = source.renderList;\r\n\r\n        return mat;\r\n    }\r\n\r\n    public static CreateDefaultMesh(name: string, scene: Scene): Mesh {\r\n        const mesh = CreateGround(name, { width: 512, height: 512, subdivisions: 32, updatable: false }, scene);\r\n        return mesh;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.WaterMaterial\", WaterMaterial);\r\n","/* eslint-disable import/no-internal-modules */\r\nimport * as MatLib from \"materials/water/index\";\r\n\r\n/**\r\n * This is the entry point for the UMD module.\r\n * The entry point for a future ESM package should be index.ts\r\n */\r\nconst globalObject = typeof global !== \"undefined\" ? global : typeof window !== \"undefined\" ? window : undefined;\r\nif (typeof globalObject !== \"undefined\") {\r\n    for (const key in MatLib) {\r\n        (<any>globalObject).BABYLON[key] = (<any>MatLib)[key];\r\n    }\r\n}\r\n\r\nexport * from \"materials/water/index\";\r\n","import * as materials from \"@lts/materials/legacy/legacy-water\";\r\nexport { materials };\r\nexport default materials;\r\n"],"names":["root","factory","exports","module","require","define","amd","self","global","this","__WEBPACK_EXTERNAL_MODULE__520__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","extendStatics","b","setPrototypeOf","__proto__","Array","p","__extends","TypeError","String","__","constructor","create","__decorate","decorators","target","desc","c","arguments","length","getOwnPropertyDescriptor","Reflect","decorate","i","SuppressedError","ShaderStore","ShadersStore","BUMP","REFLECTION","CLIPPLANE","CLIPPLANE2","CLIPPLANE3","CLIPPLANE4","CLIPPLANE5","CLIPPLANE6","ALPHATEST","DEPTHPREPASS","POINTSIZE","FOG","NORMAL","UV1","UV2","VERTEXCOLOR","VERTEXALPHA","NUM_BONE_INFLUENCERS","BonesPerMesh","INSTANCES","INSTANCESCOLOR","SPECULARTERM","LOGARITHMICDEPTH","USE_REVERSE_DEPTHBUFFER","FRESNELSEPARATE","BUMPSUPERIMPOSE","BUMPAFFECTSREFLECTION","USE_WORLD_COORDINATES","IMAGEPROCESSING","VIGNETTE","VIGNETTEBLENDMODEMULTIPLY","VIGNETTEBLENDMODEOPAQUE","TONEMAPPING","TONEMAPPING_ACES","CONTRAST","EXPOSURE","COLORCURVES","COLORGRADING","COLORGRADING3D","SAMPLER3DGREENDEPTH","SAMPLER3DBGRMAP","DITHER","IMAGEPROCESSINGPOSTPROCESS","SKIPFINALCOLORCLAMP","rebuild","MaterialDefines","name","scene","renderTargetSize","Vector2","diffuseColor","Color3","specularColor","specularPower","_disableLighting","_maxSimultaneousLights","windForce","windDirection","waveHeight","bumpHeight","_bumpSuperimpose","_fresnelSeparate","_bumpAffectsReflection","waterColor","colorBlendFactor","waterColor2","colorBlendFactor2","waveLength","waveSpeed","waveCount","disableClipPlane","_useWorldCoordinatesForWaveDeformation","_renderTargets","SmartArray","_mesh","_reflectionTransform","Matrix","Zero","_lastTime","_lastDeltaTime","_createRenderTargets","getScene","getRenderTargetTextures","reset","push","_reflectionRTT","_refractionRTT","_imageProcessingConfiguration","imageProcessingConfiguration","_imageProcessingObserver","onUpdateParameters","add","_markAllSubMeshesAsImageProcessingDirty","_useLogarithmicDepth","getEngine","getCaps","fragmentDepthSupported","_markAllSubMeshesAsMiscDirty","addToRenderList","node","renderList","removeFromRenderList","idx","indexOf","splice","enableRenderTargets","enable","refreshRate","getRenderList","needAlphaBlending","alpha","needAlphaTesting","getAlphaTestTexture","isReadyForSubMesh","mesh","subMesh","useInstances","isFrozen","effect","_wasPreviouslyReady","_wasPreviouslyUsingInstances","materialDefines","WaterMaterialDefines","defines","_isReadyForSubMesh","engine","_areTexturesDirty","_needUVs","texturesEnabled","bumpTexture","MaterialFlags","BumpTextureEnabled","isReady","ReflectionTextureEnabled","MaterialHelper","PrepareDefinesForFrameBoundValues","PrepareDefinesForMisc","pointsCloud","fogEnabled","_shouldTurnAlphaTestOn","_areMiscDirty","_needNormals","PrepareDefinesForLights","_areImageProcessingDirty","prepareDefines","IS_REFLECTION_LINEAR","reflectionTexture","gammaSpace","IS_REFRACTION_LINEAR","refractionTexture","PrepareDefinesForAttributes","_waitingRenderList","getNodeById","isDirty","markAsProcessed","resetCachedMaterial","fallbacks","EffectFallbacks","addFallback","HandleFallbacksForShadows","maxSimultaneousLights","addCPUSkinningFallback","attribs","VertexBuffer","PositionKind","NormalKind","UVKind","UV2Kind","ColorKind","PrepareAttributesForBones","PrepareAttributesForInstances","join","toString","uniforms","samplers","uniformBuffers","ImageProcessingConfiguration","PrepareUniforms","PrepareSamplers","addClipPlaneUniforms","PrepareUniformsAndSamplersList","uniformsNames","uniformBuffersNames","setEffect","createEffect","attributes","onCompiled","onError","indexParameters","_materialContext","_renderId","getRenderId","bindForSubMesh","world","_activeEffect","bindOnlyWorldMatrix","setMatrix","getTransformMatrix","BindBonesParameters","_mustRebind","setTexture","setFloat2","coordinatesIndex","level","getTextureMatrix","bindClipPlane","setFloat","pointSize","bindEyePosition","setColor4","visibility","lightsEnabled","disableLighting","BindLights","applyFog","fogMode","Scene","FOGMODE_NONE","getViewMatrix","BindFogParameters","BindLogDepth","wrvp","multiply","getProjectionMatrix","deltaTime","getDeltaTime","setVector2","applyByPostProcess","bind","_afterBind","isVisible","RenderTargetTexture","width","x","height","y","wrapU","Constants","TEXTURE_MIRROR_ADDRESSMODE","wrapV","ignoreCameraViewport","savedViewMatrix","clipPlane","mirrorMatrix","onBeforeRender","positiony","absolutePosition","Plane","FromPositionAndNormal","Vector3","onAfterRender","ReflectionToRef","multiplyToRef","setTransformMatrix","_mirroredCameraPosition","TransformCoordinates","activeCamera","position","getAnimatables","results","animations","getActiveTextures","activeTextures","_bumpTexture","hasTexture","texture","dispose","forceDisposeEffect","index","customRenderTargets","remove","clone","SerializationHelper","Clone","WaterMaterial","serialize","serializationObject","customType","id","getClassName","Parse","source","rootUrl","mat","CreateDefaultMesh","CreateGround","subdivisions","updatable","serializeAsTexture","expandToProperty","serializeAsColor3","serializeAsVector2","PushMaterial","RegisterClass","globalObject","BABYLON"],"sourceRoot":""}